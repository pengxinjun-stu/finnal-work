#下面这些内容是为了让MyBatis映射
#指定Mybatis的Mapper文件
mybatis.mapper-locations=classpath:mappers/*xml
#指定Mybatis的实体目录
mybatis.type-aliases-package=com.example.demo.mybatis.entity

# Server
server.port=8080

# Database
#spring.datasource.url=jdbc:mysql://localhost:3306/vehicle_db
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.format_sql=false

# 初始化数据库
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:create.sql
spring.sql.init.data-locations=classpath:data.sql
spring.sql.init.encoding=UTF-8
spring.sql.init.continue-on-error=false

# Redis
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.database=0
spring.redis.password=123456

# RocketMQ
rocketmq.name-server=localhost:9876
rocketmq.producer.group=producer-group
rocketmq.producer.send-message-timeout=10000
rocketmq.producer.retry-times-when-send-failed=3
rocketmq.producer.retry-times-when-send-async-failed=3
rocketmq.producer.retry-next-server=true
rocketmq.producer.max-message-size=4194304

# Custom Properties
app.warning.scan.cron=0 */5 * * * *  # 每5分钟扫描一次

# Logging
logging.level.org.hibernate=ERROR
logging.level.org.springframework=WARN
logging.level.com.example.demo=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %msg%n

# ShardingSphere 配置
spring.shardingsphere.mode.type=Memory

# 配置真实数据源
spring.shardingsphere.datasource.names=bj,sh,gz

# 北京数据源
spring.shardingsphere.datasource.bj.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.bj.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.bj.jdbc-url=jdbc:mysql://localhost:3306/vehicle_db_bj
spring.shardingsphere.datasource.bj.username=root
spring.shardingsphere.datasource.bj.password=root

# 上海数据源
spring.shardingsphere.datasource.sh.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.sh.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.sh.jdbc-url=jdbc:mysql://localhost:3306/vehicle_db_sh
spring.shardingsphere.datasource.sh.username=root
spring.shardingsphere.datasource.sh.password=root

# 广州数据源
spring.shardingsphere.datasource.gz.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.gz.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.gz.jdbc-url=jdbc:mysql://localhost:3306/vehicle_db_gz
spring.shardingsphere.datasource.gz.username=root
spring.shardingsphere.datasource.gz.password=root

# 配置 vehicle 表分片规则
spring.shardingsphere.rules.sharding.tables.vehicle.actual-data-nodes=\
  bj.vehicle,sh.vehicle,gz.vehicle
spring.shardingsphere.rules.sharding.tables.vehicle.database-strategy.standard.sharding-column=region_code
spring.shardingsphere.rules.sharding.tables.vehicle.database-strategy.standard.sharding-algorithm-name=vehicle-database-strategy

# 配置 battery_signal 表分片规则
spring.shardingsphere.rules.sharding.tables.battery_signal.actual-data-nodes=\
  bj.battery_signal_${202401..202412}_${0..1},\
  sh.battery_signal_${202401..202412}_${0..1},\
  gz.battery_signal_${202401..202412}_${0..1}
spring.shardingsphere.rules.sharding.tables.battery_signal.database-strategy.standard.sharding-column=vid
spring.shardingsphere.rules.sharding.tables.battery_signal.database-strategy.standard.sharding-algorithm-name=battery-signal-database-strategy
spring.shardingsphere.rules.sharding.tables.battery_signal.table-strategy.complex.sharding-columns=create_time,vid
spring.shardingsphere.rules.sharding.tables.battery_signal.table-strategy.complex.sharding-algorithm-name=battery-signal-table-strategy

# 配置分片算法
spring.shardingsphere.rules.sharding.sharding-algorithms.vehicle-database-strategy.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.vehicle-database-strategy.props.algorithm-expression=\
  $->{region_code.substring(0, 2).toLowerCase()}

spring.shardingsphere.rules.sharding.sharding-algorithms.battery-signal-database-strategy.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.battery-signal-database-strategy.props.algorithm-expression=\
  $->{vid.substring(5, 7).toLowerCase()}

spring.shardingsphere.rules.sharding.sharding-algorithms.battery-signal-table-strategy.type=COMPLEX_INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.battery-signal-table-strategy.props.algorithms-expression=\
  battery_signal_$->{create_time.toString().substring(0, 7).replace('-', '')}_$->{Math.abs(vid.hashCode() % 2)}

# 打开 SQL 显示，方便调试
spring.shardingsphere.props.sql-show=true

